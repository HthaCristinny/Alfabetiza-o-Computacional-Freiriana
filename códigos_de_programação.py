# -*- coding: utf-8 -*-
"""Códigos de Programação.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/10TJ3uSXd8uqOGiJbCI5ub4QgA5ogAMUk
"""

# Semântica: o nome da variável deve refletir o que ela representa

nome_do_personagem = "Mario"  # Variável que guarda o nome do personagem
quantidade_de_vidas = 3       # Variável que guarda o número de vidas
nivel_atual = 1               # Variável que indica o nível em que o jogador está

# Exibe mensagem inicial
print(f"{nome_do_personagem} começa com {quantidade_de_vidas} vidas no nível {nivel_atual}!")

# Mario perde uma vida
quantidade_de_vidas = quantidade_de_vidas - 1  # Reduz uma vida

# Mostra o novo número de vidas
print(f"{nome_do_personagem} caiu no buraco! Agora ele tem {quantidade_de_vidas} vidas.")

# Variáveis numéricas: inteiros e ponto flutuante

moedas_coletadas = 0        # Número inteiro que armazena moedas
tempo_restante = 300.0      # Número decimal que representa tempo em segundos

# Mario coleta 10 moedas
moedas_coletadas = moedas_coletadas + 10

# Exibe informação ao jogador
print("Mario coletou 10 moedas!")

# O tempo diminui
tempo_restante = tempo_restante - 12.5

# Mostra o estado atual
print(f"Total de moedas: {moedas_coletadas}")
print(f"Tempo restante: {tempo_restante} segundos")

# Variáveis booleanas representam verdadeiro ou falso

mario_esta_vivo = True       # Mario começa vivo
quantidade_de_vidas = 0      # Sem vidas

# Verifica se ele perdeu todas as vidas
if quantidade_de_vidas == 0:
    mario_esta_vivo = False  # Mario morreu

# Mostra se Mario ainda está vivo
print(f"Mario está vivo? {mario_esta_vivo}")

# Operadores relacionais: >=
# Operadores lógicos: and, or, not

moedas = 12
mario_esta_vivo = True

# Verifica se Mario tem moedas suficientes e está vivo para passar de fase
if moedas >= 10 and mario_esta_vivo:
    print("Mario passou de fase!")
else:
    print("Mario não conseguiu passar de fase.")

# Variáveis do tipo string armazenam textos

nome_do_heroi = "Mario"       # Nome do herói
nome_do_inimigo = "Bowser"    # Nome do inimigo

# Mostra quem está enfrentando quem
print(f"{nome_do_heroi} está enfrentando {nome_do_inimigo} no castelo final!")

# Composição de strings com números usando f-string

nome = "Mario"
moedas = 25
vidas = 3

# Junta texto com variáveis numéricas de forma organizada
mensagem = f"{nome} tem {moedas} moedas e {vidas} vidas restantes."

# Exibe a mensagem completa
print(mensagem)